import { AfterArg, ArgumentArg, BeforeArg, ContextArg, EntryType, EntryTypeArg, EnumTypeArg, EnumValueArg, FieldArg, InterfaceTypeArg, ObjectTypeArg, OrderByArg, RootArg, SchemaArg, UnionTypeArg } from '../metadata/args';
export declare class MetadataArgsStorage {
    enums: EnumTypeArg[];
    enumValues: EnumValueArg[];
    union: UnionTypeArg[];
    objects: ObjectTypeArg[];
    entries: EntryTypeArg[];
    schemas: SchemaArg[];
    fields: FieldArg[];
    arguments: ArgumentArg[];
    contexts: ContextArg[];
    roots: RootArg[];
    orderBys: OrderByArg[];
    befores: BeforeArg[];
    interfaces: InterfaceTypeArg[];
    afters: AfterArg[];
    filterEnumsByClass(target: any): EnumTypeArg[];
    filterEnumValuesByClass(target: any): EnumValueArg[];
    filterUnionTypeByClass(target: any): UnionTypeArg[];
    filterInterfaceTypeByClass(target: any): InterfaceTypeArg[];
    filterObjectTypeByClass(target: any): ObjectTypeArg[];
    filterEntryTypesByClassAndType(target: any, type: EntryType): EntryTypeArg[];
    filterSchemaByClass(target: any): SchemaArg[];
    filterFieldByClass(target: any): FieldArg[];
    filterArgumentByClassAndProperty(target: any, property: string): ArgumentArg[];
    filterContextByClassAndProperty(target: any, property: string): ContextArg[];
    filterRootByClassAndProperty(target: any, property: string): RootArg[];
    filterOrderByByClassAndProperty(target: any, property: string): OrderByArg[];
    filterBeforeByByClassAndProperty(target: any, property: string): BeforeArg[];
    filterAfterByByClassAndProperty(target: any, property: string): AfterArg[];
    /**
     * Filters given array by a given target or targets and prevents duplicate property names.
     */
    protected filterByTargetAndWithoutDuplicateProperties<T extends {
        target: Function | string;
        property: string;
    }>(array: T[], target: (Function | string) | (Function | string)[]): T[];
}
/**
 * Gets metadata args storage.
 * Metadata args storage follows the best practices and stores metadata in a global variable.
 */
export declare function getMetadataArgsStorage(): MetadataArgsStorage;
