"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const graphql = require("graphql");
const metadata_builder_1 = require("../metadata-builder");
const field_type_factory_1 = require("./field.type-factory");
let interfaceTypeCache = {};
function interfaceTypeFactory(target) {
    return metadata_builder_1.getMetadataBuilder().buildInterfaceTypeMetadata(target)
        .map(metadata => {
        if (!interfaceTypeCache[metadata.name]) {
            interfaceTypeCache[metadata.name] = new graphql.GraphQLInterfaceType({
                description: metadata.description,
                name: metadata.name,
                resolveType: metadata.resolver,
                fields: metadata_builder_1.getMetadataBuilder()
                    .buildFieldMetadata(target.prototype)
                    .map(field => ({
                    metadata: field,
                    type: field_type_factory_1.fieldTypeFactory(target, field),
                }))
                    .reduce((fields, field) => {
                    fields[field.metadata.name] = field.type;
                    return fields;
                }, {}),
            });
        }
        return interfaceTypeCache[metadata.name];
    })
        .find((_, index) => index === 0);
}
exports.interfaceTypeFactory = interfaceTypeFactory;
//# sourceMappingURL=interface.type-factory.js.map