{"version":3,"file":"order-by.type-factory.js","sourceRoot":"","sources":["../../src/type-factory/order-by.type-factory.ts"],"names":[],"mappings":"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","sourcesContent":["import { GraphQLEnumType, GraphQLInputObjectType, GraphQLInputObjectTypeConfig, GraphQLList, GraphQLNonNull } from 'graphql';\nimport { SchemaFactoryError, SchemaFactoryErrorType } from './schema.type-factory';\n\nimport { FieldMetadata } from '../metadata';\nimport { getMetadataBuilder } from '../metadata-builder';\n\nexport class OrderByTypeFactory {\n\n  private static orderByFieldEnumFactory(name: string, values: { [name: string]: any; }[]): GraphQLEnumType {\n    let valuesDict: { [name: string]: any; } = {};\n    values.forEach((value: any) => {\n      valuesDict[value.name] = {\n        description: value.description && value.description,\n      };\n    });\n    return new GraphQLEnumType({\n      name: name + 'OrderByFieldEnum',\n      description: 'List of available ordering fields.',\n      values: valuesDict,\n    });\n  }\n\n  private static orderByInputObjectFactory(name: string, orderBySortEnumObject: GraphQLEnumType,\n    orderByDirectionEnumObject: GraphQLEnumType): GraphQLInputObjectType {\n    return new GraphQLInputObjectType({\n      name: name + 'OrderingInputObjectType',\n      description: 'Ordering object',\n      fields: {\n        sort: { type: new GraphQLNonNull(orderBySortEnumObject) },\n        direction: { type: orderByDirectionEnumObject },\n      },\n    });\n  }\n\n  private static orderByDirectionEnumFactory(name: string): GraphQLEnumType {\n    return new GraphQLEnumType({\n      name: name + 'OrderByDirectionEnum',\n      description: 'List of available ordering directions.',\n      values: {\n        ASC: {\n          description: 'Ascendent direction',\n        },\n        DESC: {\n          description: 'Descendant direction',\n        },\n      },\n    });\n  }\n\n  static orderByFactory(metadata: FieldMetadata, args: { [name: string]: any; }): { [name: string]: any; } {\n    let orderByFieldArray: Array<{ [name: string]: any; }> = [];\n    if (args && args['orderBy'] != null) {\n      if (metadata.isPagination) {\n        if (metadata.type == null) {\n          throw new SchemaFactoryError('The @Field related to @OrderBy should have its type explicitly defined.',\n            SchemaFactoryErrorType.NO_TYPE_ORDERBY_PARENT_FIELD);\n        }\n\n        // load metadata for pagination returning type to dynamically create an array of\n        //  type properties name to use as pagination values\n        const fieldMetadataList: FieldMetadata[] = getMetadataBuilder().buildFieldMetadata(metadata.type.prototype);\n        fieldMetadataList.forEach(def => {\n          let fieldReturnType = def.type;\n          if (fieldReturnType.prototype == null) {\n            orderByFieldArray.push(def);\n          }\n        });\n\n        if (metadata.orderBy &&\n          metadata.orderBy.extraColumns &&\n          metadata.orderBy.extraColumns.constructor === Array) {\n\n          if (metadata.orderBy.shouldIgnoreSchemaFields) {\n            // remove all previous items from `orderByFieldArray`\n            orderByFieldArray.splice(0, Number.POSITIVE_INFINITY);\n          }\n\n          metadata.orderBy.extraColumns\n            .filter((item: any) => item && item.constructor === String)\n            .forEach((item: string) => orderByFieldArray.push({\n              name: item,\n              description: item,\n            }));\n        }\n        let orderBySortEnumObject = OrderByTypeFactory.orderByFieldEnumFactory(metadata.name, orderByFieldArray);\n        let orderByDirectionEnumObject = OrderByTypeFactory.orderByDirectionEnumFactory(metadata.name);\n        let orderByInputObject = OrderByTypeFactory.orderByInputObjectFactory(metadata.name, orderBySortEnumObject,\n          orderByDirectionEnumObject);\n        let orderByInputObjectArray = new GraphQLList(orderByInputObject);\n        args['orderBy'].type = orderByInputObjectArray;\n      } else {\n        throw new SchemaFactoryError('@OrderBy decorator is only allowed inside a method decorated with @Pagination.',\n          SchemaFactoryErrorType.ORDER_BY_OUTSIDE_PAGINATION);\n      }\n    }\n\n    return args;\n  }\n\n}\n"]}