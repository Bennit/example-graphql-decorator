{"version":3,"file":"enum-value.type-factory.js","sourceRoot":"","sources":["../../src/type-factory/enum-value.type-factory.ts"],"names":[],"mappings":";;AAAA,+DAAmF;AAInF,8BAAqC,MAAgB,EAAE,QAA2B;IAChF,IAAI,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;IACvC,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;IAC3B,IAAI,cAAc,GAAG,OAAO,CAAC,WAAW,CAAC,aAAa,EAAE,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC;IACtG,IAAI,SAAS,CAAC;IAEd,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;QACnB,MAAM,IAAI,wCAAkB,CAAC,2EAA2E,EACtG,4CAAsB,CAAC,wBAAwB,CAAC,CAAC;IACrD,CAAC;IAED,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;QAClB,SAAS,GAAG;YACV,KAAK,EAAE,KAAK;YACZ,WAAW,EAAE,WAAW;SACzB,CAAC;IACJ,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,SAAS,GAAG;YACV,WAAW,EAAE,WAAW;SACzB,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC;AAvBD,oDAuBC","sourcesContent":["import { SchemaFactoryError, SchemaFactoryErrorType } from './schema.type-factory';\n\nimport { EnumValueMetadata } from '../metadata';\n\nexport function enumValueTypeFactory(target: Function, metadata: EnumValueMetadata): any {\n  let description = metadata.description;\n  let value = metadata.value;\n  let isFunctionType = Reflect.getMetadata('design:type', target.prototype, metadata.name) === Function;\n  let valueType;\n\n  if (isFunctionType) {\n    throw new SchemaFactoryError('Value declared in a class annotated by @EnumType should not be a function',\n      SchemaFactoryErrorType.VALUE_SHOULD_NOT_BE_FUNC);\n  }\n\n  if (value != null) {\n    valueType = {\n      value: value,\n      description: description,\n    };\n  } else {\n    valueType = {\n      description: description,\n    };\n  }\n\n  return valueType;\n}\n"]}