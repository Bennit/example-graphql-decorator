{"version":3,"file":"enum.type-factory.js","sourceRoot":"","sources":["../../src/type-factory/enum.type-factory.ts"],"names":[],"mappings":";;AACA,+DAAmF;AAEnF,qCAA0C;AAC1C,uEAAiE;AACjE,0DAAyD;AAEzD,yBAAgC,MAAW;IAEzC,MAAM,gBAAgB,GAAG,qCAAkB,EAAE;SAC1C,iBAAiB,CAAC,MAAM,CAAC;SACzB,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC;IAEvC,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,MAAM,IAAI,gBAAgB,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;QACrE,MAAM,IAAI,wCAAkB,CAAC,oFAAoF,EAC/G,4CAAsB,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,MAAM,MAAM,GAA2B,EAAE,CAAC;IAC1C,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG;QACjC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,8CAAoB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,yBAAe,CAAC;QACzB,IAAI,EAAE,gBAAgB,CAAC,IAAI;QAC3B,WAAW,EAAE,gBAAgB,CAAC,WAAW;QACzC,MAAM,EAAE,MAAM;KACf,CAAC,CAAC;AACL,CAAC;AArBD,0CAqBC","sourcesContent":["import { EnumTypeMetadata, EnumValueMetadata } from '../metadata';\nimport { SchemaFactoryError, SchemaFactoryErrorType } from './schema.type-factory';\n\nimport { GraphQLEnumType } from 'graphql';\nimport { enumValueTypeFactory } from './enum-value.type-factory';\nimport { getMetadataBuilder } from '../metadata-builder';\n\nexport function enumTypeFactory(target: any): any {\n\n  const enumTypeMetadata = getMetadataBuilder()\n    .buildEnumMetadata(target)\n    .find((value, index) => index === 0);\n\n  if (!enumTypeMetadata.values || enumTypeMetadata.values.length === 0) {\n    throw new SchemaFactoryError('Class annotated by @EnumType() should has one or more fields annotated by @Value()',\n      SchemaFactoryErrorType.NO_VALUE);\n  }\n\n  const values: { [key: string]: any } = {};\n  enumTypeMetadata.values.forEach(def => {\n    values[def.name] = enumValueTypeFactory(target, def);\n  });\n\n  return new GraphQLEnumType({\n    name: enumTypeMetadata.name,\n    description: enumTypeMetadata.description,\n    values: values,\n  });\n}\n"]}