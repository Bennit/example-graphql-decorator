{"version":3,"file":"object-type.decorator.js","sourceRoot":"","sources":["../../src/decorator/object-type.decorator.ts"],"names":[],"mappings":";;AAAA,kDAA6E;AAG7E,0DAA6D;AAE7D;;;;;GAKG;AACH,oBAA2B,MAAqB;IAC9C,MAAM,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACzC,CAAC;AAFD,gCAEC;AAED;;;;;GAKG;AACH,yBAAgC,MAAqB;IACnD,MAAM,CAAC,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACxC,CAAC;AAFD,0CAEC;AAED,0BAA0B,OAAgB,EAAE,MAAqB;IAC/D,MAAM,CAAC,UAAU,MAAW;QAE1B,EAAE,CAAC,CAAC,OAAO,IAAI,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YAC3C,MAAM,IAAI,iCAAkB,CAAC,oDAAoD,MAAM,CAAC,IAAI,GAAG,EAC7F,qCAAsB,CAAC,qCAAqC,CAAC,CAAC;QAClE,CAAC;QAED,yCAAsB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;YACpC,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,WAAW,EAAE,MAAM,GAAG,MAAM,CAAC,WAAW,GAAG,IAAI;YAC/C,OAAO,EAAE,OAAO;YAChB,UAAU,EAAE,MAAM,IAAI,MAAM,CAAC,UAAU,GAAG,CACxC,MAAM,CAAC,UAAU,CAAC,WAAW,KAAK,KAAK,GAAG,CAAC,MAAM,CAAC,UAAsB,CAAC,GAAG,MAAM,CAAC,UAAwB,CAC5G,GAAG,EAAE;SACP,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { SchemaFactoryError, SchemaFactoryErrorType } from '../type-factory';\n\nimport { ObjectOption } from '../metadata/options';\nimport { getMetadataArgsStorage } from '../metadata-builder';\n\n/**\n * It is used to create {@link GraphQLObjectType} objects.\n * See [GraphQL Documentation - Object Types]{@http://graphql.org/learn/schema/#object-types-and-fields}\n *\n * @param option Options for an Object Type\n */\nexport function ObjectType(option?: ObjectOption) {\n  return CreateObjectType(false, option);\n}\n\n/**\n * It is used to create {@link GraphQLInputObjectType} objects.\n * See [GraphQL Documentation - Input Types]{@http://graphql.org/learn/schema/#input-types}\n *\n * @param option Options for an Input Object Type\n */\nexport function InputObjectType(option?: ObjectOption) {\n  return CreateObjectType(true, option);\n}\n\nfunction CreateObjectType(isInput: boolean, option?: ObjectOption) {\n  return function (target: any) {\n\n    if (isInput && option && option.interfaces) {\n      throw new SchemaFactoryError(`Input types are not allowed to have interfaces: '${target.name}'`,\n        SchemaFactoryErrorType.INPUT_FIELD_SHOULD_NOT_HAVE_INTERFACE);\n    }\n\n    getMetadataArgsStorage().objects.push({\n      target: target,\n      name: target.name,\n      description: option ? option.description : null,\n      isInput: isInput,\n      interfaces: option && option.interfaces ? (\n        option.interfaces.constructor !== Array ? [option.interfaces as Function] : option.interfaces as Function[]\n      ) : [],\n    });\n  };\n}\n\n"]}