{"version":3,"file":"enum-type.decorator.js","sourceRoot":"","sources":["../../src/decorator/enum-type.decorator.ts"],"names":[],"mappings":";;AACA,0DAA6D;AAE7D;;;;;GAKG;AACH,kBAAyB,MAAmB;IAC1C,MAAM,CAAC,UAAU,MAAW;QAC1B,yCAAsB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;YAClC,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,WAAW,EAAE,MAAM,GAAG,MAAM,CAAC,WAAW,GAAG,IAAI;SAChD,CAAC,CAAC;IACL,CAAa,CAAC;AAChB,CAAC;AARD,4BAQC;AAED;;;;;;;;;;;;;;;;;;GAkBG;AACH,eAAsB,KAAU,EAAE,MAAwB;IACxD,MAAM,CAAC,UAAU,MAAW,EAAE,WAAgB,EAAE,gBAAqB;QACnE,yCAAsB,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC;YACvC,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,KAAK;YACZ,WAAW,EAAE,MAAM,GAAG,MAAM,CAAC,WAAW,GAAG,IAAI;SAChD,CAAC,CAAC;IACL,CAAa,CAAC;AAChB,CAAC;AATD,sBASC","sourcesContent":["import { EnumOption, EnumValueOption } from '../metadata';\nimport { getMetadataArgsStorage } from '../metadata-builder';\n\n/**\n * It can be used just like {@link ObjectType} in order to create {@link GraphQLEnumType} objects.\n * See [GraphQL Documentation - Enum Types]{@http://graphql.org/learn/schema/#enumeration-types}\n *\n * @param option Options for an Enum Type\n */\nexport function EnumType(option?: EnumOption) {\n  return function (target: any) {\n    getMetadataArgsStorage().enums.push({\n      target: target,\n      name: target.name,\n      description: option ? option.description : null,\n    });\n  } as Function;\n}\n\n/**\n * Used to define a value for an {@link EnumType} definition.\n *\n * Example usage:\n *\n * ```typescript\n * @EnumType()\n * class MyEnum {\n *   @Value('1', {description: 'Value One'})\n *   VALUE_ONE: string;\n *\n *   @Value('2', {description: 'Value Two'})\n *   VALUE_TWO: string;\n * }\n *```\n *\n * @param value Value to be assigned to the property at schema level\n * @param option Options for a Enum Value\n */\nexport function Value(value: any, option?: EnumValueOption) {\n  return function (target: any, propertyKey: any, methodDescriptor: any) {\n    getMetadataArgsStorage().enumValues.push({\n      target: target,\n      name: propertyKey,\n      value: value,\n      description: option ? option.description : null,\n    });\n  } as Function;\n}\n"]}